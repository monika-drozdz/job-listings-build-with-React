{"version":3,"sources":["components/TagButton/TagButton.jsx","components/JobCard/JobCard.jsx","components/FilterCard/FilterCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["TagButton","tag","handleTagClick","onClick","className","JobCard","job","company","id","logo","isNew","featured","position","role","level","postedAt","contract","location","languages","tools","tags","push","src","alt","map","FilterCard","filters","handleFilterClick","handleClearClick","filter","App","useState","jobs","setJobs","setFilters","useEffect","data","includes","filteredJobs","length","some","passedFilter","f","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mkGAQeA,EANG,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,eACrB,OACI,wBAAQC,QAAS,kBAAKD,EAAeD,IAAMG,UAAU,MAArD,SAA4DH,KCwErDI,EAzEC,SAAC,GAiBV,IAAD,IAjBYC,IAEdC,GAeE,EAhBFC,GAgBE,EAfFD,SACAE,EAcE,EAdFA,KACAC,EAaE,EAbFA,MACAC,EAYE,EAZFA,SACAC,EAWE,EAXFA,SACAC,EAUE,EAVFA,KACAC,EASE,EATFA,MACAC,EAQE,EARFA,SACAC,EAOE,EAPFA,SACAC,EAME,EANFA,SACAC,EAKE,EALFA,UACAC,EAIE,EAJFA,MAEAjB,EAEE,EAFFA,eAGMkB,EAAO,CAACP,EAAMC,GAUpB,OARIK,GACAC,EAAKC,KAAL,MAAAD,EAAI,YAASD,IAGdD,GACCE,EAAKC,KAAL,MAAAD,EAAI,YAASF,IAIb,sBAAKd,UAAS,UAAKO,EAAW,gBAAkB,GAAlC,aAAd,UAEA,sBAAKP,UAAU,kBAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKkB,IAAKb,EAAMc,IAAI,WAGxB,sBAAKnB,UAAU,cAAf,UACI,gCACI,oBAAIA,UAAU,eAAd,SAA8BG,IAC7BG,GAAU,sBAAMN,UAAU,eAAhB,kBACVO,GAAa,sBAAMP,UAAU,oBAAhB,yBAGlB,qBAAKA,UAAU,WAAf,SACKQ,IAEL,sBAAKR,UAAU,kBAAf,UACI,+BAAOW,IACP,sBAAMX,UAAU,MAAhB,kBACA,+BAAOY,IACP,sBAAMZ,UAAU,MAAhB,kBACA,+BAAOa,aAMnB,qBAAKb,UAAU,iBAAf,SAGQgB,EAAKI,KAAI,SAACvB,EAAKO,GACX,OACI,cAAC,EAAD,CAAWN,eAAgBA,EAAgBD,IAAKA,EAAhD,SAA+DA,GAALO,YC5CnEiB,G,MAnBI,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,kBAAmBC,EAAsB,EAAtBA,iBAE7C,OACI,sBAAKxB,UAAU,yBAAf,UACQ,qBAAKA,UAAU,0BAAf,SAEQsB,EAAQF,KAAI,SAACK,EAAQrB,GAAT,OACZ,yBAAQJ,UAAU,gBAAgBD,QAAS,kBAAMwB,EAAkBE,IAAnE,UACI,uBAAMzB,UAAU,aAAhB,UAA8ByB,EAA9B,OACA,sBAAMzB,UAAU,aAAhB,sBAF6EI,QAM7F,qBAAKJ,UAAU,YAAYD,QAAS,kBAAMyB,EAAiBF,IAA3D,wB,OCuEGI,MA7Ef,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOL,EAAP,KAAgBQ,EAAhB,KAEAC,qBAAU,WACNF,EAAQG,KACP,IAGP,IAmBMlC,EAAiB,SAACD,GAClByB,EAAQW,SAASpC,IACrBiC,EAAW,GAAD,mBAAKR,GAAL,CAAczB,MAWpBqC,EAAeN,EAAKH,QAhCP,SAAC,GAAqC,IAApChB,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOK,EAAsB,EAAtBA,MAAOD,EAAe,EAAfA,UAEvC,GAAuB,IAAnBQ,EAAQa,OACV,OAAO,EAGT,IAAMnB,EAAO,CAACP,EAAMC,GAUpB,OARMK,GACAC,EAAKC,KAAL,MAAAD,EAAI,YAASD,IAGdD,GACCE,EAAKC,KAAL,MAAAD,EAAI,YAASF,IAGZE,EAAKoB,MAAK,SAACvC,GAAD,OAASyB,EAAQW,SAASpC,SAkBzC,OACE,sBAAKG,UAAU,MAAf,UACE,wBAAQA,UAAU,eAGjB,sBAAKA,UAAU,UAAf,UAEOsB,EAAQa,OAAS,GACjB,qBAAKnC,UAAU,cAAf,SACE,cAAC,EAAD,CAAYuB,kBAnBJ,SAACc,GACzBP,EAAWR,EAAQG,QAAO,SAACa,GAAD,OAAOA,IAAMD,OAkB2Bb,iBAf3C,WACvBM,EAAW,KAc2FR,QAASA,MAKnGY,EAAad,KAAI,SAAClB,GAAD,OACf,cAAC,EAAD,CACEJ,eAAgBA,EAChBI,IAAKA,GACAA,EAAIE,UAMjB,iCACE,8CACe,mBAAGmC,KAAK,8CAA8CC,OAAO,SAASC,IAAI,aAA1E,6BADf,cAEW,mBAAGF,KAAK,mCAAmCC,OAAO,SAASC,IAAI,aAA/D,wCAFX,aCjEGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.a4cb52d3.chunk.js","sourcesContent":["import './TagButton.scss';\n\nconst TagButton = ({tag, handleTagClick}) => {\n    return (\n        <button onClick={()=> handleTagClick(tag)} className=\"tag\">{tag}</button>\n    )\n};\n\nexport default TagButton;","import './JobCard.scss';\nimport TagButton from '../TagButton/TagButton';\n\nconst JobCard = ({job: {\n    id,\n    company,\n    logo,\n    isNew,\n    featured,\n    position,\n    role,\n    level,\n    postedAt,\n    contract,\n    location,\n    languages,\n    tools,\n},\n    handleTagClick,\n    \n}) => {\n    const tags = [role, level];\n    \n    if (tools) {\n        tags.push(...tools);\n    }\n\n    if(languages) {\n        tags.push(...languages);\n    }\n\n    return (\n        <div className={`${featured ? 'featured-card' : ''} job-card`}>\n       \n        <div className=\"job-description\">\n            <div className=\"company-logo\">\n                <img src={logo} alt=\"logo\"/>\n            </div>\n        \n            <div className=\"job-preview\">\n                <div>\n                    <h5 className=\"company-name\">{company}</h5>\n                    {isNew && (<span className=\"chips is-new\">NEW!</span>)}\n                    {featured && (<span className=\"chips is-featured\">FEATURED</span>)}\n                </div>\n\n                <div className=\"position\">\n                    {position}\n                </div>\n                <div className=\"additional-info\">\n                    <span>{postedAt}</span>\n                    <span className=\"dot\">&#183;</span>\n                    <span>{contract}</span>\n                    <span className=\"dot\">&#183;</span>\n                    <span>{location}</span>\n                </div>\n            </div>\n            \n\n        </div>\n        <div className=\"tags-container\">\n           \n            {\n                tags.map((tag, id) => {\n                    return (\n                        <TagButton handleTagClick={handleTagClick} tag={tag} key={id}>{tag}</TagButton>\n                    )\n                })\n            }\n        \n        </div>\n\n        </div>\n    )\n};\n\nexport default JobCard;","import './FilterCard.scss';\n\nconst FilterCard = ({filters, handleFilterClick, handleClearClick}) => {\n    \n    return (\n        <div className=\"job-card filtered-card\">\n                <div className=\"filtered-tags-container\">\n                    {\n                        filters.map((filter, id) =>  (\n                        <button className=\"filter-button\" onClick={() => handleFilterClick(filter)} key={id}>\n                            <span className=\"filter-tag\">{filter} </span>\n                            <span className=\"clear-icon\">✖</span>\n                        </button>))\n                    }\n                </div>     \n            <div className=\"clear-btn\" onClick={() => handleClearClick(filters)}>Clear</div>\n        </div>\n        \n    )\n}\n\nexport default FilterCard;","import React, { useState, useEffect } from 'react';\n\nimport './App.scss';\n\nimport JobCard from './components/JobCard/JobCard';\nimport FilterCard from './components/FilterCard/FilterCard';\n\nimport data from './data/data.json';\n\nfunction App () {\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n      setJobs(data); \n    }, []\n  );\n\nconst filterFunc = ({role, level, tools, languages}) => {\n  \n  if (filters.length === 0) {\n    return true;\n  };\n  \n  const tags = [role, level];\n    \n    if (tools) {\n        tags.push(...tools);\n    }\n\n    if(languages) {\n        tags.push(...languages);\n    }\n\n  return tags.some((tag) => filters.includes(tag));\n};\n\nconst handleTagClick = (tag) => {\n  if (filters.includes(tag)) return;\n  setFilters([...filters, tag]);\n}\n\nconst handleFilterClick = (passedFilter) => {\n  setFilters(filters.filter((f) => f !== passedFilter));\n}\n\nconst handleClearClick = () => {\n  setFilters([]);\n}\n\nconst filteredJobs = jobs.filter(filterFunc);\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n         \n         <div className=\"preview\">\n            {\n                filters.length > 0 && (\n                <div className=\"filter-card\"> \n                  <FilterCard handleFilterClick={handleFilterClick} handleClearClick={handleClearClick} filters={filters}/>\n                </div>)\n            }\n          \n            {\n              filteredJobs.map((job) => (\n                <JobCard \n                  handleTagClick={handleTagClick}\n                  job={job} \n                  key={job.id}/>\n                )\n              )\n            }\n         \n          </div>\n          <footer>\n            <p>\n              Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\" rel=\"noreferrer\">Frontend Mentor</a>.\n              Coded by <a href=\"https://github.com/monika-drozdz\" target=\"_blank\" rel=\"noreferrer\">Monika Dróżdż</a>.\n            </p>\n          </footer>\n      </div>\n    );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}